name: API tests

on: workflow_dispatch
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.12'

#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt

      - name: Run API tests with pytest and generate Allure results
        run: |
          docker compose up api_tests --exit-code-from api_tests || true
#          pytest --alluredir=allure-results --numprocesses 2

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  publish-report:
    needs: [ run-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

#      - name: Allure Report action from marketplace
#        uses: simple-elf/allure-report-action@v1.12
#        if: always()
#        with:
#          allure_results: allure-results
#          allure_history: allure-history

      - name: Generate Allure report
        run: |
          sudo docker compose run ests /bin/sh -c "allure generate allure-results --clean -o allure-report"
#          docker compose up report

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report
#          publish_dir: allure-history